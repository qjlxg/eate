# 工作流名称，将显示在 GitHub Actions 页面
name: Run Fund Analysis Script

# 触发工作流的事件
on:
  # 允许手动在 GitHub 界面上运行工作流
  workflow_dispatch:
  # 定时任务，例如每天上海时间 08:00 运行
  schedule:
    - cron: '0 0 * * *'
  # 当 fund_analyzer.py 或工作流文件本身被修改并推送时，自动运行
  push:
    paths:
      - 'multi_fund_analyzer.py'
      - '.github/workflows/run_fund_analysis.yml'

# 为整个工作流提供权限
permissions:
  contents: write

# 定义工作任务
jobs:
  run-script-and-commit:
    runs-on: ubuntu-latest

    # 设置环境变量，包括时区
    env:
      TZ: Asia/Shanghai

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas 
          pip install requests beautifulsoup4
          pip install akshare --upgrade



      - name: Run Python script and save output
        id: run-script
        run: |
          # 运行多基金分析脚本，并捕获完整输出
          OUTPUT=$(python multi_fund_analyzer.py)
          
          # 将结果写入一个 Markdown 文件，以日期命名
          echo "### 基金分析报告 - $(date +'%Y-%m-%d')" > analysis_report.md
          echo "" >> analysis_report.md
          echo "\`\`\`" >> analysis_report.md
          echo "$OUTPUT" >> analysis_report.md
          echo "\`\`\`" >> analysis_report.md
          
          # 将文件名设置为一个环境变量，以便后续步骤使用
          echo "report_file=analysis_report.md" >> $GITHUB_ENV

      - name: Commit new analysis report
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add ${{ env.report_file }} fund_cache.json
          git diff --staged --quiet || git commit -m "Auto-generated analysis report for $(date +'%Y-%m-%d')"
          
      - name: Push changes
        run: |
          git push || echo "No changes to push."
